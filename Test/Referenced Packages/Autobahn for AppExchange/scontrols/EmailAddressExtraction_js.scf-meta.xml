<?xml version="1.0" encoding="UTF-8"?>
<Scontrol xmlns="http://soap.sforce.com/2006/04/metadata">
    <contentSource>Snippet</contentSource>
    <description>EmailAddressExtraction_js</description>
    <encodingKey>UTF-8</encodingKey>
    <fileContent></fileContent>
    <fileName>emailaddressextraction.js</fileName>
    <name>EmailAddressExtraction_js</name>
    <supportsCaching>true</supportsCaching>
</Scontrol>
